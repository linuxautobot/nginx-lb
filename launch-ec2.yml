---

- name: Create a new Assignment EC2 instance
  hosts: localhost
  gather_facts: False

  vars:
      region: ap-south-1
      instance_type: t2.micro
      ami: ami-00b7e666605d33085  # Ubuntu 16.04 LTS
      keypair: dev # pem file name
      sg_name: WebServer
      sg_lb: LB
      sg_web:  WebServer

  tasks:

    - name: Create security group 
      ec2_group:
        name: "{{ sg_lb }}"
        description: sg with only http 
        vpc_id: vpc-4f057d27
        region: ap-south-1
        rules:
          - proto: tcp
            ports:
            - 80
            - 22
            cidr_ip: 0.0.0.0/0
            rule_desc: allow all on port 22 80

        rules_egress:
        - proto: all
          cidr_ip: 0.0.0.0/0
      register: aws_lb
#   - debug: msg="aws_sg= {{ aws_sg }}"

    - name: Create security group 
      ec2_group:
        name: "{{ sg_web }}"
        description: sg with only http 
        vpc_id: vpc-4f057d27
        region: ap-south-1
        rules:
          - proto: tcp
            ports:
            - 22
            - 80
            cidr_ip: 172.31.0.0/20
            rule_desc: allow private cidr_ip on port 80 22

        rules_egress:
        - proto: all
          cidr_ip: 0.0.0.0/0
      register: aws_web


    - name: Create an public ec2 instance
      ec2:
         key_name: "{{ keypair }}"
#         group: "{{ sg_name }}" # security group name
         group_id: "{{ aws_lb.group_id }}"
         instance_type: "{{ instance_type}}"
         image: "{{ ami }}"
         wait: true
         region: "{{ region }}"
         count: 1  # default
         count_tag:
            Name: http
         instance_tags:
            Name: LB
         vpc_subnet_id: subnet-665c350e
         assign_public_ip: yes
      register: ec2

    - name: Create an private ec2 instance
      ec2:
         key_name: "{{ keypair }}"
         #group: "{{ sg_name }}" # security group name
         group_id: "{{ aws_web.group_id }}"
         instance_type: "{{ instance_type}}"
         image: "{{ ami }}"
         wait: true
         region: "{{ region }}"
         count: 1  # default
         count_tag:
            Name: http
         instance_tags:
            Name: WebServer
         vpc_subnet_id: subnet-665c350e
         assign_public_ip: no
      register: private_ec2

#    - debug: msg="private_ec2= {{ private_ec2 }}"

    - name: Wait for SSH to come up
      local_action: wait_for 
                      host={{ item.public_ip }}
                      port=22
                      state=started
      with_items: ec2.instances
